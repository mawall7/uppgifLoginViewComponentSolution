@model uppgifLoginViewComponent.Models.ViewModels.StudentInfoViewModel
@*use scripts in partial view? går enligt plural sight utan section artikel! Scripts section doesnt work by default design. you will need helpers in that case.*@
<script>
    buttons = document.getElementsByTagName("button");
    //let number = 0;
    for (let i = 0 ; i < buttons.length; i++) {
        console.log("button", buttons[i]);
        buttons[i].addEventListener("click", function (e)
        {
            //let target;
            //console.log("etarget", target);
            let target = e.target.innerHTML.replace(/^a-zA-Z0-9 ]/g, '')
            target = target.trim();
            //number++;
            //LogOnClick(number);
            GetCourseNameOnClick(target);
            ShowCourseAtDropzone(target);
        })
    }
   
</script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<div class="text-primary">
</div>
@*<h3>Info</h3>*@
@*<p>Name:@ViewBag.FName &nbsp; @ViewBag.LName</p>*@
<p>Name:@Model.FirstMidName &nbsp; @Model.LastName</p>


<h3>Courses</h3>


<div class="accordion" id="accordionExample">

    @{ foreach (var item in Model.Enrollments)
        {

            <div class="accordion-item">
                <h2 class="accordion-header" id="acsitems@(item.ID.ToString())">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#item@(item.ID.ToString())" aria-expanded="true" aria-controls="collapseOne@(item.ID.ToString())"
                         >
                        @item.Name
                    </button>
                </h2>
                <div id="item@(item.ID.ToString())" class="accordion-collapse collapse " aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                    <div class="accordion-body">

                          
                        <p>CourseName: @item.Name</p>
                        <p>Grade: @item.StudentGrade</p>
                        @{ foreach (var assignment in item.Assignments)
                            {

                                // if (assignment.CourseID == item.CourseID)
                                 <span>AssignmentName:&nbsp;@Model.CourseAssignment.Where(ca => ca.CourseID == assignment.CourseID).FirstOrDefault().AssignmentName.ToString()</span>
                                 <span>DueDate:</span><span>/&nbsp;:@Model.CourseAssignment.Where(ca => ca.CourseID == assignment.CourseID).FirstOrDefault().LastSubmissionDate.ToString()</span>
                                    
                                <p>AssignmentFileName: @assignment.Name &nbsp;/SubmissionDate:&nbsp;@assignment.SubmissionDate.ToString()</p> 
                                <span>Submitted: </span>
                                @if (DateTime.Compare(
                               @Model.CourseAssignment.
                               Where(ca => ca.CourseID == assignment.CourseID)
                               .FirstOrDefault().LastSubmissionDate, assignment.SubmissionDate) > 0)
                               {<span><i class="fa fa-check" style="color:forestgreen"></i>OnTime</span><br> }
                                else {<span> <i class="fa fa-times" style="color:red"></i> Late</span> <br>} 
                               }

                                
                        }
                    </div>
                </div>
            </div>
        }
    }




</div>






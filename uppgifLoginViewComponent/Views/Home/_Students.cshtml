@model uppgifLoginViewComponent.Models.ViewModels.IndexViewModel
@*@{
        ViewData["Title"] = "Index";
    }*@

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">

@*@section Scripts {

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    }*@

@section Scripts{




    @*//fungerar ej
        //var courseinfo = document.getElementById("courseinfo");
        //courseinfo.innerHTML = "string";
        //var courseselect = document.getElementById("courses");
        //var itemselected = courseselect.value;
        //courseselect.addEventListener("change", myfunction());
        //function myfunction() {
        //    var cinfo = document.getElementById("courseinfo");
        //    cinfo.innerHTML = "courseinfo here update";
        //    courseinfo.innerHTML = "courses";
        //}*@


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>






}



<script>

    function DeleteOnClose(selectid, lastname) {
        var select = document.getElementById(selectid);
        document.getElementById(lastname).innerHTML = "";//ta bort kursinfo
        //let upload = document.getElementById("my-awesome-dropzone");
        //let hidden = upload.getAttribute("hidden");
        //upload.setAttribute("hidden", "hidden");
        let upload = document.getElementById("my-awesome-dropzone");
        //let hidden = upload.getAttribute("hidden");

        upload.setAttribute("hidden", "hidden");//modalknapp
        $(".fileupload").attr("hidden", "hidden"); // knapponcanv
        console.log(upload.getAttribute("hidden").value);
        select.value = "0";

    }

    async function myFunction(selectid, lastname) {
        var select = document.getElementById(selectid);

        let upload = document.getElementById("my-awesome-dropzone");
        let hidden = upload.getAttribute("hidden");

        if (select.value == "0") {

            upload.setAttribute("hidden", "hidden");
            $(".fileupload").attr("hidden", "hidden");

        }
        else {
            upload.removeAttribute("hidden");
            $(".fileupload").removeAttr("hidden"); // måste vara en klass id hittar bara första klassen då det är unikt.

        }


        console.log(select.value, "= select.value", hidden, "=attrhidden")
        if (select.value == "0") { //value för pågående kurser

            /*DeleteOnClose(selectid, lastname);*/
            htmlstring = "";
            document.getElementById(lastname).innerHTML = htmlstring;

            return;
        }



        //if (select.value == "0" || typeof (select.value) === 'undefined') {
        //    upload.setAttribute("hidden", "hidden");
        //    return; //om select är Pågående kurser visa inget
        //}
        //else {
        //    if (hidden)
        //    upload.removeAttribute("hidden");

        //}


        var value = select.value;
        console.log(value, typeof (select.value));
        /* $("#myModal").modal('show');*/
        //$("myoffCanv").offcanvas('hide');
        //let canv = document.getElementById("myoffCanv");
        //let canvclass = document.createArribute("class");
        //canvclass.value = "show";
        //document.getElementById("myModal").modal('show');
        //alternativ till att hårdkoda det här?

        //nytt
        //let stringid = String(id);
        var route = "https://localhost:44343/Home/getJsonEnrolls?value=" + value;
        let lastn = lastname;

        const respons = await fetch(route, { method: "GET" });
        const enroll = await respons.json();

        //ok :)
        //    document.getElementById("test").innerHTML = "testok" + lastn;
        console.log("values", enroll)

        if (enroll != null) {
            Object.values(enroll).forEach(val => console.log(val));


            let coursestring = "";
            let courseTitle = enroll.title;
            let courseCredits = String(enroll.credits);

            coursestring += `<div class="text-primary" style="display:inline;"id="coursesinfo"><p>CourseName: ${courseTitle}</p><p>CourseCredits: ${courseCredits}</p></div>`
            //let avregistrera = `<a class="btn btn-danger" asp-action="Delete" asp-route-lastname="${lastn}" asp-route-courseTitle="${courseTitle}">Aregistrera </a>` lägger kurs info efter selectlist onklick
            let avregistrera = `<form asp-action="Delete">
                Avregistrera: <div><input type="hidden" asp-for="lastname" name="lastname" value="${lastname}"/>
                <input type="hidden" asp-for="courseTitle" name="courseTitle" value="${courseTitle}"></input>
                <input type="submit" value="avregistrera" class="btn btn-default" /> |
                </p>
                </form>

                <a asp-action="Index" > Back to Full List</a>
                <a href="/Home/Delete?lastname=${lastname}&courseTitle=${courseTitle}"> Back to Full List</a>`

            ////let dropfile = `<form id = "my-awesome-dropzone" class="dropzone" action = "/Home/Upload" method = "post" enctype = "multipart/form-data" >
            //      <div class="dropzone-previews"></div>
            //      <button type="submit">Submit data and files!</button>
            //      </form >
            //      <script src="dropzone-custom.js">`




            /*/ok:) avregistrera2 . avregistrera1a tag ej ok renderar ingen länk:( varför? fråga någon /vad jag lärt?det är svårt att blanda ihop bootstrap komponenter?  */
            let avregistrera2 = `<a class="btn btn-danger " href="/Home/Delete?lastname=${lastname}&courseTitle=${courseTitle}">Avregistrera kurs</a>`
            let htmlstring = coursestring + avregistrera2;

            if (value == "0") { //value för pågående kurser
                htmlstring = "";
                dropfile.innerHTML = "";
            }
            document.getElementById(lastn).innerHTML = htmlstring;

            //document.getElementById(lastn).innerHTML = "testok" + String(enrolls);
            //document.getElementById("my-awesome-dropzone").hidden = "";
        }
    }
    //ok :)
    /*<a class="btn btn-danger" asp-action="Delete" asp-route-lastname="${lastn}" asp-route-courseTitle="${courseTitle}">Aregistrera </a>*/


    function AddUpload() {

        $("#myModal").modal('show');
    }


</script>

<div class="text-dark text-center">
   <h1>StudentView</h1>
</div>



<p>
    <a asp-action="Create">Create New</a>
</p>



<div class="modal" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Sänd uppgift</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">

                <script src="https://unpkg.com/dropzone@6.0.0-beta.1/dist/dropzone-min.js"></script>
                <link href="https://unpkg.com/dropzone@6.0.0-beta.1/dist/dropzone.css" rel="stylesheet" type="text/css" />


                <form id="my-awesome-dropzone" class="dropzone" hidden="hidden" action="/Home/Upload" method="post" enctype="multipart/form-data">
                    <div class="dropzone-previews"></div>
                    <span>-></span>
                    <button class="btn btn-success btn-sm " type="submit">Spara din fil</button>
                    <span>| Ladda upp/ skicka din text-fil</span>
                </form>
                <script src="dropzone-custom.js"></script>

            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>


@*<div class="row">
    <div class="col-8">*@
        @*<a type="submit" asp-action="Delete" asp-route-lastname="Olivetto" asp-route-coursetitle="ProgrammeringA">avregistrera2</a>*@
        <table class="table ">
            <thead class="text-center bg bg-warning">
                <tr>
                    <th>
                        Info
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Student.LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Student.FirstMidName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Student.EnrollmentDate)
                    </th>
                    <th class="text-left pl-5 ">
                        Enrollments
                    </th>
                </tr>
            </thead>


            <tbody>
                @foreach (var item in Model.Students)
                {

                    @*<div @Html.Partial("_Enrollment") asp-contoller="Home" asp-action="StudentEnrollments"></div>*@

                <tr>
                    @*<div class="col-8"> inte tillåtet med en td innanför en div tvärtom ok*@

                        <td class="td1">
                            <a asp-controller="Students" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                            <a asp-controller="Students" asp-action="Details" asp-route-id="@item.ID">Details</a>
                            <a asp-controller="Students" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                        </td>




                        <!--<td>-->@*<div @Html.Partial("_Modal", ViewData["thisstudentrolls"])></div>*@<!--</td>-->
                        <td class="td1">
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td class="td1">
                            @Html.DisplayFor(modelItem => item.FirstMidName)
                        </td>
                        <td class="td1">
                            @Html.DisplayFor(modelItem => item.EnrollmentDate)
                        </td>

                    
           
                    

                        <td>

                            @{if (item.Enrollments.Count == 0)
                                {
                                    <p class="td1">no enrollments</p>
                                }
                                else
                                {


                                    @*@Model.Student = item;*@ @*funkar ej*@
                            var studstr = "modal" + item.ID.ToString();
                            var stud = "#modal" + item.ID.ToString();
                            var studcanv2 = "offcanv" + item.ID.ToString();
                            var studcanv1 = "#offcanv" + item.ID.ToString();

                            //ny kod nedan 2 rader



                            //var student = new Student(); student = item;
                            // @Html.Partial("_Modal", student)//funkar ej ger samma student för alla knappar;

                                    @*<div class="col-4 border-right border-secondary text-right">

                    <button class="btn" type="button" data-bs-toggle="offcanvas" off-canvas-target="@(studcanv1)"> <img class="mr-3" src="https://cdn.pixabay.com/photo/2017/06/25/19/09/house-2441625_960_720.png" style="height:auto; width:20%;"></button>
                    <div class="text-info mr-5">Dina kurser</div>
                </div>
                <div class="col-4 text-left">
                    <a href="https://www.google.com"> <img class="ml-3" src="https://cdn.pixabay.com/photo/2019/07/03/05/58/envelope-4313721_960_720.png" style="height:auto; width:20%;"></a>
                    <div class="text-info mr-5">Dina kontaktuppgifter</div>
                </div>*@


                                    <a class="btn text-info ml-5 d-inline" style="margin:0; padding:0" role="button" data-bs-toggle="offcanvas" data-bs-target="@(studcanv1)"> <img src="https://cdn.pixabay.com/photo/2017/06/25/19/09/house-2441625_960_720.png" style="height:auto; width:5%; margin:0; padding:0">Mina kurser</a>
                                    @*<div class="text-info mr-5">Dina kurser</div>*@
                                    <div class="border-left border-primary d-inline" style="margin:0; padding:0"></div>
                                    <a class="text-info ml-3 mr-5 d-inline" style="margin:0; padding:0" href="https://www.google.com"> <img src="https://cdn.pixabay.com/photo/2019/07/03/05/58/envelope-4313721_960_720.png" style="height:auto; width:5%; margin:0; padding:0">Dina kontaktuppifter</a>


                                    @*<div @Html.Partial("_Modal", @ViewData["Enrollments"] = (Student)item )></div>*@
                            { Tuple<Student, string, string> studpartialinfo = new Tuple<Student, string, string>(item, studcanv2, studcanv1);
                                ViewData["partialstudinfo"] = studpartialinfo;
                            }
                               <div @Html.Partial("_StudCanvas", ViewData["partialstudinfo"])></div>


                                    <!--<div class="offcanvas offcanvas-bottom" tabindex="-1" id="@(studcanv2)" aria-labelledby="offcanvasBottomLabel">
                                        <div class="offcanvas-header">
                                            <h5 class="offcanvas-title" id="offcanvasBottomLabel">Pågående kurser:</h5>
                                            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close" onclick="DeleteOnClose('@(item.ID.ToString())','@(item.LastName)')"></button>
                                        </div>
                                        <div class="offcanvas-body small">

                                            <div class="row">
                                                <div class="col-2">
                                                    <p>Student: @item.FirstMidName @item.LastName</p>

                                                    @{var enrolls = item.Enrollments.Select(a => a.Name).ToList();

                                                        //to do taghelper
                                                        List<SelectListItem> items = enrolls.ConvertAll(a =>
                                                        {
                                                            return new SelectListItem()
                                                            {
                                                                Text = a.ToString(),
                                                                Value = a.ToString(),
                                                                Selected = false
                                                            };
                                                        });
                                                    }-->
                                                    @*på det här sättet kan man skriva för att lägga till html.*@
                                                    <!--@{string enrhtml = "";
                                                        foreach (var itemx in enrolls)
                                                        {
                                                            enrhtml += $"<p>{itemx.ToString()}</p>";
                                                        };

                                                    }--> @*i onchanve innerHTML='@(enrhtml)' *@
                                                    @*id måste vara unikt för varje selectlist eftersom varje student ska ha en selectlist (i varje popover id sätts i oncklick med '' ej " i getElementById ='@(item.ID)' )*@
                                                    <!--@{ var cid = item.ID.ToString(); var pid = item.ID.ToString() + item.LastName;}-->
                                                    @*hur gör man en onchange funktion istället fungerar inte vill ju bara visa den valda kursens info. få select värdet genom element.value*@
                                                    @*<select class="form-control-sm" id="@(item.ID.ToString())" asp-for="@item"
                                    asp-items="@items" onchange="document.getElementById('@(item.LastName)').innerHTML=" ${this.value}">
                                @{ var stringx = item.Enrollments.Select(a => a.Name + " " + a.StudentGrade).ToString();}
                                    >*@

                                                    @*@{ var jsonenroll = System.Text.Json.JsonSerializer.Serialize(item.Enrollments);
                                }*@

                                                    @*ok :)*@
                                                    @*<select class="form-control-sm" id="@(item.ID.ToString())" asp-for="@item"
                                asp-items="@items" onchange="myFunction('@(item.ID)', '@(item.LastName)')">*@
                                                    @*myFunction('@(item.ID)')*@


                                                    <!--<form id="@(item.ID.ToString())form ">
                                                        <select class="form-control-sm" id="@(item.ID.ToString())" asp-for="@item"
                                                                asp-items="@items" onchange="myFunction('@(item.ID.ToString())', '@(item.LastName)')">

                                                            <option value="0" selected>Se pågående kurser</option>-->


                                                            @*.innerHTML =" ${this.value}"*@
                                                            @*hur göra ett c variabel till javascript variabel this.value vill leta efter den valda kursen och visa dess namn och betyg?*@


                                                        <!--</select>
                                                    </form>
                                                </div>

                                                <div class="col-4 bg-light">-->
                                                    @*id = coursepopover*@ @*//här visas kurser onselect, avregistrera o. upload*@
                                                    <!--<div border-right border-dark" id="@(item.LastName)"></div>
                                                    <div typeof="button" id="fileupload" class="btn btn-dark fileupload" hidden="hidden" onclick="AddUpload()">
                                                        <i class="fa fa-floppy-o fa-lg" aria-hidden="true"></i>
                                                        upload file
                                                    </div>

                                                </div>

                                                <div class="col-4">
                                                    <div class="asssignments align-items-center pb-3">Inskickade uppgifter</div>
                                                    <table>
                                                        <tablehead>
                                                            <tr>
                                                                <td>
                                                                    FilNamn
                                                                </td>
                                                                <td>
                                                                    Datum
                                                                </td>
                                                            </tr>
                                                        </tablehead>
                                                        <tbody>

                                                            @foreach (var assignment in item.Assignments)
                                                            {
                                                                <tr>
                                                                    <td>@assignment.Name</td>
                                                                    <td>Datenotimplemented</td>
                                                                </tr>

                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>-->
                                            @*<div typeof="button" id="fileupload" class="btn btn-dark fileupload" hidden="hidden" onclick="AddUpload()">
                            <i class="fa fa-floppy-o fa-lg" aria-hidden="true"></i>
                            upload file
                        </div>*@

                                        <!--</div>
                                    </div>-->



















                                    @*<div class="td1">
                    <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="@(studcanv1)" aria-controls="@(studcanv1)">Pågående kurser</button>
                </div>*@








                                    <!--<form id="my-awesome-dropzone" class="dropzone" action="/Home/Upload" method="post" enctype="multipart/form-data">
            <div class="dropzone-previews"></div>-->
                                    <!-- this is were the previews should be shown. -->
                                    <!-- Now setup your input fields -->
                                    <!--<button type="submit">Submit data and files!</button>
            </form>
            <script src="dropzone-custom.js"></script>-->
                                    @*@foreach (var xitem in item.Enrollments)
                {
                    <p>KursNamn: @xitem.Name</p>
                    <p>Betyg: @xitem.StudentGrade.ToString()</p>*@

                                    @*}*@



                                    @*</div>*@
                                    @*<div>*@

                                    @*<div class="row">
                    <div class="col-6 border-right border-secondary text-right">

                        <a class="btn" type="button" data-bs-target="@(studcanv1)"> <img class="mr-3" src="https://cdn.pixabay.com/photo/2017/06/25/19/09/house-2441625_960_720.png" style="height:auto; width:20%;"></a>
                        <div class="text-info mr-5">Dina kurser</div>
                    </div>
                    <div class="col-6 text-left">
                        <a href="https://www.google.com"> <img class="ml-3" src="https://cdn.pixabay.com/photo/2019/07/03/05/58/envelope-4313721_960_720.png" style="height:auto; width:20%;"></a>
                        <div class="text-info mr-5">Dina kontaktuppgifter</div>
                    </div>
                </div>*@
                                    @*</div>*@
                                }


                            }
                            @*<script>
            const dz = new Dropzone(".dropzone", {
            // The configuration we've talked about above
            url: "/home/Upload",
            autoProcessQueue: false,
            uploadMultiple: false,
            parallelUploads: 100,
            maxFiles: 100,
            // The setting up of the dropzone
            init: function () {
            var myDropzone = this;
            // First change the button to actually tell Dropzone to process the queue.
            this.element.querySelector("button[type=submit]").addEventListener("click", function (e) {
            // Make sure that the form isn't actually being sent.
            e.preventDefault();
            e.stopPropagation();
            myDropzone.processQueue();
            });
            // Listen to the sendingmultiple event. In this case, it's the sendingmultiple event instead
            // of the sending event because uploadMultiple is set to true.
            this.on("sendingmultiple", function () {
            // Gets triggered when the form is actually being sent.
            // Hide the success button or the complete form.
            });
            this.on("successmultiple", function (files, response) {
            // Gets triggered when the files have successfully been sent.
            // Redirect user or notify of success.
            });
            this.on("errormultiple", function (files, response) {
            // Gets triggered when there was an error sending the files.
            // Maybe show form again, and notify user of error
            });
            }
            });
        </script>*@



                        </td>

                    




                </tr>
                    

                                                       


                    }
    </tbody>

    </table>



  

@*</div>*@



@*<div class="row">
    <div class="col-6 border-right border-secondary text-right">
        <a class="btn" type="button" data-bs-target="@(studcanv1) ">

        </a>
        <a href="https://www.google.com"> <img class="mr-3" src="https://cdn.pixabay.com/photo/2017/06/25/19/09/house-2441625_960_720.png" style="height:auto; width:20%;"></a>
        <div class="text-info mr-5">Dina kurser</div>
    </div>
    <div class="col-6 text-left">
        <a href="https://www.google.com"> <img class="ml-3" src="https://cdn.pixabay.com/photo/2019/07/03/05/58/envelope-4313721_960_720.png" style="height:auto; width:20%;"></a>
        <div class="text-info mr-5">Dina kontaktuppgifter</div>
    </div>
</div>*@



@*<script src="https://unpkg.com/dropzone@6.0.0-beta.1/dist/dropzone-min.js"></script>
    <link href="https://unpkg.com/dropzone@6.0.0-beta.1/dist/dropzone.css" rel="stylesheet" type="text/css" />


    <form id="my-awesome-dropzone" class="dropzone" hidden="hidden" action="/Home/Upload" method="post" enctype="multipart/form-data">
        <div class="dropzone-previews"></div>
        this is were the previews should be shown.
        Now setup your input fields
        <button type="submit">Submit data and files!</button>
    </form>
    <script src="dropzone-custom.js"></script>*@



<script>
    //".dropzone"
    const dz = new Dropzone(".dropzone", {
        // The configuration we've talked about above
        url: "/home/Upload",
        autoProcessQueue: false,
        uploadMultiple: false,
        parallelUploads: 100,
        maxFiles: 100,
        // The setting up of the dropzone
        init: function () {
            var myDropzone = this;
            // First change the button to actually tell Dropzone to process the queue.
            this.element.querySelector("button[type=submit]").addEventListener("click", function (e) {
                // Make sure that the form isn't actually being sent.
                e.preventDefault();
                e.stopPropagation();
                myDropzone.processQueue();
            });
            // Listen to the sendingmultiple event. In this case, it's the sendingmultiple event instead
            // of the sending event because uploadMultiple is set to true.
            this.on("sendingmultiple", function () {
                // Gets triggered when the form is actually being sent.
                // Hide the success button or the complete form.
            });
            this.on("successmultiple", function (files, response) {
                // Gets triggered when the files have successfully been sent.
                // Redirect user or notify of success.
            });
            this.on("errormultiple", function (files, response) {
                // Gets triggered when there was an error sending the files.
                // Maybe show form again, and notify user of error
            });
        }
    });
</script>
@*@section Scripts{

        <script> //fungerar ej
        var courseinfo = document.getElementById("courseinfo");
        courseinfo.innerHTML = "string";
        var courseselect = document.getElementById("courses");
        var itemselected = courseselect.value;
        courseselect.addEventListener("change", myfunction());
        function myfunction()
        {
        var cinfo = document.getElementById("courseinfo");
        cinfo.innerHTML = "courseinfo here update";
        courseinfo.innerHTML = "courses";
        }
        </script>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    }*@









































@*@model IEnumerable<uppgifLoginViewComponent.Models.Student>*@
@model uppgifLoginViewComponent.Models.ViewModels.IndexViewModel
@*@{
        ViewData["Title"] = "Home Page";
    }*@
@*

    @section Scripts {


        <script src="https://use.fontawesome.com/3c66019ee4.js"></script>

        }*@
<form asp-action="OnSubmitAjax" asp-controller="Home"
      data-ajax="true"
      data-ajax-metod="POST"
      data-ajax-mode="replace"
      data-ajax-update="#info"
      data-ajax-success="UpdateSelect"
      data-ajax-begin="AddStudId">


    <div id="jsupdate" class="form-group">
        //ändra till att visa alla studenter i selectlista och sedan val visas via home ajax och det visas då alla uppgifter för den studenten med symboler hus och assignments. sedan kan man beroende på inloggning få viss athorization
        @*<div><h4>@Html.Label("studentid")</h4></div>*@
        @*<input type="text" name="studentid"/> alternativ*@
        @*<div>@Html.TextBox("Search student", "", htmlAttributes: new { @class = "form-control", id = "studentid" })</div>*@
        <label class="custom-control-label">Select Student</label>
        <select id="studselect" class="form-control" asp-items="Model.StudentsSelect" name="StudentId">
            <option value="" selected="selected" disabled="disabled">--select student--</option>
        </select>
        <input type="hidden" name="StudentId" />
    </div>


    <input type="submit" value="Submit" name="btnSubmit" class="btn btn-dark">
</form>

<script>
 //flytta till wwroot



    function UpdateSelect() {
        document.getElementById("jsupdate").innerHTML = "";
        let mainelement = document.getElementById("jsupdate");
        let select = document.createElement("select");

        select.setAttribute("id", "studselect");
        select.setAttribute("name", "StudentId");
        select.classList.add("form-control");
        studs = [];
        var opt = document.createElement("option");
        var studentsobjs = @Json.Serialize(Model);
        console.log("studentsobject: ", studentsobjs);
        var students = studentsobjs.students;
        console.log("students", students); //to do onsdag


        for (let student in students["$values"]) { //student blir = 0 , 1 listindex varför ?
            console.log("stu", student);
            console.log("stu2", students["$values"][student])
            var studentjobj = students["$values"][student];
            console.log("studobj", studentjobj);
            BuildSelectOptions(studentjobj);


        }




        function BuildSelectOptions(student)
        {
            var opt = document.createElement("option");
            opt.text = student["firstMidName"];
            opt.value = student["id"];
            select.appendChild(opt);
        }
                var value = students["$values"][0]["lastName"];
                console.log(value);
                console.log("LName--", value);


            //var opt = document.createElement("option");
            //opt.value = students["firstMidName"];



        opt.setAttribute("selected", "selected"); opt.innerHTML = "--select student--"; opt.setAttribute("disabled", "disabled");
            select.appendChild(opt);
            mainelement.appendChild(select);
    }
</script>

<div id="info">
    @*@if(ViewBag.Name!= null) {<p>@ViewBag.Name</p>;}*@
    @*@if(ViewBag.Name == null){<p>Empty</p>}*@
    @*@{ if (Model.Student != null) {

            <p>@Model.Student.FirstMidName</p>
            <p>@Model.Student.Email</p>
                @if(Model.Student.Enrollments != null)
                    foreach (var item in Model.Student.Enrollments)
                { <p>@item.Name &nbsp; StudentGrade:@item.StudentGrade </p>}


                } }
        @if(Model.Student== null) { <p>No student selected</p>}*@
    replace text
</div>


<script>


    function Success() {
        // alert("Success?");
    }</script>
    dropzone ok :)
<meta charset="UTF-8">
<title>Dropzone JS tutorial</title>
<script src="https://unpkg.com/dropzone@6.0.0-beta.1/dist/dropzone-min.js"></script>
<link href="https://unpkg.com/dropzone@6.0.0-beta.1/dist/dropzone.css" rel="stylesheet" type="text/css" />


<form id="my-awesome-dropzone" class="dropzone" action="~/Home/Upload?Id=1" method="post" enctype="multipart/form-data">
    <div class="dropzone-previews"></div>
    this is were the previews should be shown.
    Now setup your input fields

    <button type="submit">Submit data and files! </button>
</form>
@*<script src="dropzone-custom.js"></script>*@



    }

<script>
    const dz = new Dropzone(".dropzone", {
        // The configuration we've talked about above
        //url: "/home/Upload", //tog bort det för att använda action = i form taggen i stället för att få in id
        autoProceshQueue: false,
        uploadMultiple: false,
        parallelUploads: 100,
        maxFiles: 100,
        // The setting up of the dropzone
        init: function () {
            var myDropzone = this;
            // First change the button to actually tell Dropzone to process the queue.
            this.element.querySelector("button[type=submit]").addEventListener("click", function (e) {
                // Make sure that the form isn't actually being sent.
                e.preventDefault();
                e.stopPropagation();
                myDropzone.processQueue();
            });
            // Listen to the sendingmultiple event. In this case, it's the sendingmultiple event instead
            // of the sending event because uploadMultiple is set to true. < changed to false
            this.on("sendingmultiple", function () {
                // Gets triggered when the form is actually being sent.
                // Hide the success button or the complete form.
            });
            this.on("successmultiple", function (files, response) {
                // Gets triggered when the files have successfully been sent.
                // Redirect user or notify of success.
            });
            this.on("errormultiple", function (files, response) {
                // Gets triggered when there was an error sending the files.
                // Maybe show form again, and notify user of error
            });
        }
    });

   
    function AddStudId() { //AddStudId till dropzone fungerar ej varför? borde gå att få id från selectlistan studselect efter att den byggs upp med BuildSelectOptions.  körs vid ajax anrop innan det körs , data-ajax-begin sätter då dit id på valdstudent på dropzone action attribut (id är parameter till Home/Upload i controllern)
        let dz = document.getElementById("my-awesome-dropzone");
        let sselectval = document.getElementById("studselect").value; //value ska vara studentid:t;
        dz.setAttribute("action", "~/Home/Upload?Id=" + sselectval);
    }
</script>


@*</div>*@


@*<div @Html.Partial("_Modal")></div>*@

@*<div @Html.Partial("_Students", Model)*@ @*asp-controller="Home" asp-action="StudentsPartial"*@>@*</div>*@
<p class="text-primary">
</p>



@*.fa fa-floppy-o fa-lg {color: blue;}*@

<div await @Html.PartialAsync("_Students", Model)></div>

}


















